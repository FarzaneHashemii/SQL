#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data. 

SELECT * FROM BIT_DB.customers LIMIT 10;

SELECT * FROM BIT_DB.JanSales LIMIT 10;

--- How many orders were placed in January?
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--- How many of those orders were for an iPhone?
SELECT COUNT(*) FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone';

--- Select the customer account numbers for all the orders that were placed in February
SELECT acctnum FROM customers JOIN FebSales 
ON customers.order_id = FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

--- Which product was the cheapest one sold in January, and what was the price?
SELECT Product, price FROM JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID' 
ORDER BY price LIMIT 1;

--- What is the total revenue for each product sold in January?
SELECT Product, SUM(Quantity)*price AS Revenue
FROM JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY Product;

--- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, SUM(Quantity), SUM(Quantity)*Price AS Revenue
FROM FebSales 
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

--- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(DISTINCT acctnum) AS 'Number of Customers', 
AVG(Quantity*price) AS 'Average Spent'
FROM FebSales LEFT JOIN customers ON orderID = order_id
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Quantity > 2;

---
SELECT orderdate
FROM BIT_DB.FebSales
WHERE orderdate between '02/13/19 00:00' AND '02/18/19 00:00';

SELECT location
FROM BIT_DB.FebSales 
WHERE orderdate = '02/18/19 01:35';

SELECT sum(quantity)
FROM BIT_DB.FebSales 
WHERE orderdate like '02/18/19%';

--- List all the products sold in Los Angeles in February, and include how many of each were sold
SELECT Product, SUM(Quantity) FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

--- Which locations in New York received at least 3 orders in January, and how many orders did they each receive?
SELECT location, Count(*)
FROM BIT_DB.JanSales
WHERE location like '%New York%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID) >= 3;

--- How many of each type of headphone were sold in February?
SELECT Product, Sum(Quantity) AS 'Number Sold'
FROM BIT_DB.FebSales 
WHERE Product like '%headphone%'
GROUP BY Product;

--- What was the average amount spent per account in February? 
SELECT AVG(Quantity*Price) AS 'Average Spent per Account'
FROM BIT_DB.FebSales
JOIN BIT_DB.customers 
ON FebSales.orderID = customers.order_id
WHERE length(orderid) = 6 
AND orderid <> 'Order ID';

--- What was the average quantity of products purchased per account in February?
SELECT AVG(Quantity) AS 'Average Quantity of Products Purchased'
FROM BIT_DB.FebSales 
JOIN BIT_DB.customers 
ON FebSales.orderID = customers.order_id
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

--- Which product brought in the most revenue in January and how much revenue did it bring in total?
SELECT Product, SUM(Quantity*price) as 'Revenue'
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
GROUP BY Product
ORDER BY Revenue DESC
LIMIT 1;

